# cook your dish here
def precedence(op):
    if op=='^':
        return 3
    if op in ('*','/'):
        return 2
    if op in ('+','-'):
        return 1
    return 0
def rpn(expr):
    stack=[]
    output=[]
    for ch in expr:
        if ch.isalpha():
            output.append(ch)
        elif ch=='(':
            stack.append(ch)
        elif ch==')':
            while stack and stack[-1]!='(':
                output.append(stack.pop())
            stack.pop()
        else:
            while stack and precedence(stack[-1])>=precedence(ch):
                output.append(stack.pop())
            stack.append(ch)
    while stack:
        output.append(stack.pop())
    return "".join(output)
if __name__ == "__main__":
    t=int(input().strip())
    for _ in range(t):
        expr=input().strip()
        print(rpn(expr))
